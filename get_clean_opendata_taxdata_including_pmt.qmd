---
format: html
editor-options: 
  chunk-output-type: console
---

# Download and save opendata (data.ny.gov) tax data -- including pmt data

## Setup

```{r}
#| label: setup

source(here::here("r", "libraries.r"))
source(here::here("r", "libraries_ts.r"))
# source(here::here("r", "constants.r"))
# source(here::here("r", "functions.r"))

```

```{r}
#| label: constants

DRAW <- here::here("data-raw")
DWORK <- here::here("data-work")
DDATA <- here::here("data")

```

## About the data

The Tax Department reports monthly collections for each state tax on two state websites that do not appear to be integrated (that is, they need not be consistent with each other):

-   OpenData single data file: Monthly Tax Department collections data for most state taxes are [here](https://data.ny.gov/Government-Finance/New-York-State-Local-and-Local-Purpose-Taxes-and-F/2vni-8tmb) on the OpenData site. This is far more convenient to work with than spreadsheet data.

Tax Dept montly data on OpenData
https://data.ny.gov/Government-Finance/New-York-State-Local-and-Local-Purpose-Taxes-and-F/2vni-8tmb

Contact: OTPA.OpenNYData@tax.ny.gov

-   The site contains links to several documentation files. Here are a few relevant excerpts:

> The Department of Taxation and Finance monthly produces a compilation of those state and local and local purpose taxes and fees collected by the Department. The taxes and fees information provided in this data set are primarily taxes imposed by the Tax Law, but also includes fees that are imposed by other state laws but are administered and collected by the Department. Collections are net of refunds and other processing and accounting adjustments. The data set provides a history of these collections by month beginning with April 1996.
>
> Taxes and fees collections reflected in this data set are compiled from net collections reported monthly by the Accounting Bureau of the Office of Processing and Taxpayer Services, New York State Department of Taxation and Finance.
>
> The collections information reflected in this data set is prior to disposition to specific dedicated revenue funds where required by statute and are comparable to the "all government funds" or "all funds" categorization of revenues by the New York State Division of Budget and the New York State Office of the State Comptroller. However, timing differences on the part of the Accounting Bureau and the Comptroller may give rise to small variations for some of the taxes and fees amounts presented in this dataset.

-   A changelog on the site available for Feb 2023 forward shows when they change data and how many rows they inserted. Based on this:

    -   The data appear to be updated in the 3rd week of the month, for collections in the prior month.

    -   The data as it stood after the update can be downloaded from the changelog area of the site.

    -   As of May 26, 2023, all but one of the Feb 2023+ updates appears to be insertion of data for a new month.

    -   The exception is Apr 20, 2023 when they inserted 2 rows, copied below.

    > month_of_collections,tax_type,tax_or_fee,amount_collected_in_thousands
    >
    > October 2022,Local/local purpose taxes,MCTD Mobility Tax,120513
    >
    > November 2022,Local/local purpose taxes,MCTD Mobility Tax,138102

-   Thus, they appear to have corrected 2 rows in the entire database (which includes all state taxes) for the payroll mobility tax. This is consistent with my Apr 19 email conversation with Aysegul Kocer, which included information from her correspondence with the Tax Department:

![](images/image-1755562616.png)

-   Note, however, that they do not appear to have updated the total MCTD (which is the sum of the wage tax and the net earnings from self-employment tax) - I'll have to check that.
-   The contact email is [here](OTPA.OpenNYData@tax.ny.gov). I will reach out to them with some additional corrections.

-   The data are in thousands of dollars.

-   I'm constructing a corrected data subset that has data relevant to the MTA and to forecasting MTA taxes -- that is, the MTA taxes plus any counterparts that might yield insights into these taxes, such as state income tax withholding.

-   Here is what the documentation says about these taxes. Note that the documentation may not be up to date with 2023 law changes, but the data should be.

![](images/image-893522319.png)

![](images/image-933809457.png)

![](images/image-960328823.png)

## Download docs and data from opendata

```{r}
#| label: ONETIME-download-docs
```

NOT READY: figure out how to do downloads.

```{r}
#| label: ONETIME-OpenData-download
#| eval: false
#| include: false

# Download based on data updated: May 17, 2023

# https://data.ny.gov/Government-Finance/New-York-State-Local-and-Local-Purpose-Taxes-and-F/2vni-8tmb
url <- "https://data.ny.gov/api/views/2vni-8tmb/rows.csv?accessType=DOWNLOAD&sorting=true"
fn <- "New_York_State__Local__and_Local_Purpose_Taxes_and_Fees_Collected_Monthly_by_the_Department_of_Taxation_and_Finance__Beginning_April_1996.csv"

# fpath <- file.path(here::here("data", "dtf", fn))
fpath <- fs::path(DRAW, "opendata")

download.file(url, destfile = fpath, mode = "wb")

```

## Read the data, prune variables, and save unadjusted

```{r}
#| label: read-opendata
#| eval: true

# dir <- r"(E:\data\nys_monthly_tax\data-raw\opendata\)"

fname <- "New_York_State__Local__and_Local_Purpose_Taxes_and_Fees_Collected_Monthly_by_the_Department_of_Taxation_and_Finance__Beginning_April_1996_20250516.csv"

fpath <- fs::path(DRAW, "opendata", fname)

df1 <- vroom(fpath)
glimpse(df1)
skim(df1)
count(df1, `Month of Collections`) |> ht()

## CAUTION: verify that column names are consistent with the new variable names being given below ----
names(df1)
df2 <- df1 |>
  setNames(c(
    "sfy",
    "monthyear",
    "type",
    "tax",
    "value",
    "fymonth",
    "typesort",
    "taxsort"
  )) |>
  mutate(across(c(fymonth, typesort, taxsort), as.integer))

cbind(names(df2)[1:length(names(df1))], names(df1))

glimpse(df2)

# check the data

```

```{r}
#| label: inspect-dates

# rationalize dates
df3 <- df2 |>
  mutate(
    month = ifelse(fymonth <= 9, fymonth + 3, fymonth - 9),
    year = ifelse(month > 3, sfy - 1, sfy),
    date = as.Date(paste0(year, "/", month, "/", 1))
  ) |>
  arrange(date)
max(df3$date)
glimpse(df3)
count(df3, fymonth, month)
count(df3, month, fymonth)
count(df3, date) |> ht()

# are there any missing months?
allmonths <- seq(min(df3$date), max(df3$date), by = "1 month")
setdiff(allmonths, unique(df3$date)) # good, no missing months

```

```{r}
#| label: pare-and-save

df4 <- df3 |>
  select(date, sfy, fymonth, typesort, type, taxsort, tax, value)

saveRDS(df4, fs::path(DWORK, "monthly_collections_unadjusted.rds"))

rm(df1, df2, df3, df4)
```

## Add short variable names

```{r}
#| label: vnames

df1 <- readRDS(fs::path(DWORK, "monthly_collections_unadjusted.rds"))
glimpse(df1)

vars <- count(df1, typesort, taxsort, type, tax)
count(vars, typesort, type)

# short names for tax types
vtypes <- read_csv(
  "vtype, type
pit, Personal Income Tax           
user, Excise and User Taxes and Fees
business, Business Taxes                
transfer, Property Transfer Taxes       
other, Other Revenues                
local, Local/local purpose taxes     
"
)
vtypes

df2 <- df1 |>
  left_join(vtypes, by = join_by(type)) |>
  relocate(vtype, .before = type)
count(df2, typesort, vtype, type)

# continue to add variable names ----
vnames <- read_delim(
  "vname; vtype; tax
  pit_wh; pit; Withholding Tax  
  pit_del; pit; Delinquencies
  pit_et; pit; Estimated Tax
  pit_fr; pit; Final Payments
  pit_ref; pit; Less:  Refunds and Minor Offsets
  pit_scoff; pit; Less:  State/City Offsets
  pit_llc; pit; Limited Liability Company Fees
  pit_net; pit; Net Collections
  pit_gross; pit; Total Gross Collections

  user_cannabis; user; Adult Use Cannabis
  user_abt; user; Alcoholic Beverage Tax
  user_ciglic; user; Cigarette Retailer Licenses Fees
  user_cigvend; user; Cigarette Retailer Vending Machine Stickers
  user_cigtax; user; Cigarette Tax
  user_sut; user; Sales and Use Tax

  local_pmtwage; local; MCTD Mobility Tax
  local_pmtnesegross; local; MCTMT Personal Income Tax Gross Collections
  local_pmtnesenet; local; MCTMT Personal Income Tax Net Collections
  local_pmtneseref; local; Less:  MCTMT Personal Income Tax Refunds and Minor Offsets

  local_congestion; local; Congestion Surcharge

  local_art9186g; local; Article 9, Section 186g Local Surcharge
  ",
  delim = ";",
  trim_ws = TRUE
)

df3 <- df2 |>
  left_join(vnames, by = join_by(vtype, tax)) |>
  relocate(vname, .before = tax)

check <- count(df3, typesort, vtype, vname, tax)

saveRDS(df3, fs::path(DWORK, "monthly_collections_unadjusted_vnames.rds"))
rm(df1, df2, df3, check)

```

## Correct known errors

```{r}
df1 <- readRDS(fs::path(DWORK, "monthly_collections_unadjusted_vnames.rds"))
glimpse(df1)

```

### Known errors in the payroll mobility tax

```{r}
#| label: mta-fixes

fixes_mobility <- read_csv(
  "date, vname, fixval
2016-11-01, local_pmtwage, 96840
2017-11-01, local_pmtwage, 96741
2018-11-01, local_pmtwage, 99141
2019-10-01, local_pmtwage, 125215
2019-11-01, local_pmtwage, 102558
2021-07-01, local_pmtwage, 111347
"
)
fixes_mobility

df2 <- df1 |>
  left_join(fixes_mobility, by = join_by(date, vname)) |>
  mutate(
    value_original = value,
    value = ifelse(!is.na(fixval), fixval, value)
  )

df2 |> filter(!is.na(fixval))

```


```{r}
#| label: convert-to-dollars-and-save

df3 <- df2 |>
  select(-fixval) |>
  mutate(across(c(value, value_original), \(x) x * 1000.))

saveRDS(df3, fs::path(DDATA, "monthly_collections.rds"))

```
